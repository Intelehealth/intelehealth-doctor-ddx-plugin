import { Component, Input, Output, EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../../services/aiddx.service";
import * as i2 from "@angular/common";
import * as i3 from "@ngx-translate/core";
// import { dummyPayload, response } from '../token';
export class AillmddxComponent {
    ddxSvc;
    patientInfo;
    visit;
    existingDiagnosis = [];
    diagnosisSelected = new EventEmitter();
    notes;
    isLoading = false;
    hasError = false;
    noData = false;
    insufficientData = false;
    conclusion = '';
    questions = [
        {
            title: 'Key symptoms and their characteristics',
            items: [
                'Can you describe the rash in more detail?',
                'Are there any blackheads or whiteheads?',
                'Does the rash itch or burn? Does it get worse after sweating or sun exposure?',
                'When you say the rash is transient, how long does it last before disappearing?',
                'Does it reappear in the same location?'
            ]
        },
    ];
    diagnosisList = [];
    selectedDiagnosis = [];
    constructor(ddxSvc) {
        this.ddxSvc = ddxSvc;
    }
    ngOnInit() { }
    getAIDiagnosis(notes) {
        const payload = this.ddxSvc.getDDxPayload(this.patientInfo, this.visit, notes);
        this.isLoading = true;
        this.diagnosisList = [];
        this.ddxSvc.getAIDiagnosis(payload).subscribe({
            next: (data) => {
                if (data?.conclusion)
                    this.conclusion = data?.conclusion;
                if (data.result.length > 0) {
                    this.noData = false;
                    this.diagnosisList = data.result.map(v => {
                        return {
                            ...v,
                            diagnosis: v?.diagnosis?.replace(/\s*\(.*?\)\s*/g, ''),
                            rationale: this.ddxSvc.markdownit(v?.rationale)
                        };
                    });
                }
                else {
                    this.noData = true;
                }
            },
            error: (err) => {
                this.hasError = true;
                this.isLoading = false;
            },
            complete: () => {
                this.isLoading = false;
            }
        });
        // setTimeout(() => {
        //   if (response.result.length > 0) {
        //     this.noData = false;
        //     this.conclusion = response?.conclusion;
        //     this.diagnosisList = response.result.map(v => ({ ...v, diagnosis: v?.diagnosis?.replace(/\s*\(.*?\)\s*/g, '') }));
        //   } else {
        //     this.noData = true;
        //   }
        //   this.isLoading = false;
        // }, 3000);
    }
    onTryAgain() {
        this.getAIDiagnosis(this.notes);
    }
    onAIDiagnosisChange(event) {
        if (!event) {
            this.selectedDiagnosis = [];
        }
        else if (Array.isArray(event)) {
            this.selectedDiagnosis = [...event];
        }
        else {
            const index = this.selectedDiagnosis.indexOf(event);
            if (index > -1) {
                this.selectedDiagnosis = this.selectedDiagnosis.filter(d => d !== event);
            }
            else {
                this.selectedDiagnosis = [...this.selectedDiagnosis, event];
            }
        }
        this.diagnosisSelected.emit([...this.selectedDiagnosis]);
    }
    isDiagnosisExists(diagnosis) {
        return this.existingDiagnosis.some(d => d.diagnosisName === diagnosis);
    }
    isDiagnosisSelected(diagnosis) {
        return this.selectedDiagnosis.includes(diagnosis) || this.existingDiagnosis.some(d => d?.diagnosisName === diagnosis);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: AillmddxComponent, deps: [{ token: i1.AiddxService }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: AillmddxComponent, selector: "app-aillmddx", inputs: { patientInfo: "patientInfo", visit: "visit", existingDiagnosis: "existingDiagnosis", notes: "notes" }, outputs: { diagnosisSelected: "diagnosisSelected" }, ngImport: i0, template: "<ng-container *ngIf=\"!diagnosisList.length\">\n    <div class=\"d-flex justify-content-center mt-2\">\n        <div class=\"erorr-container alert text-center p-4 d-flex flex-column align-items-center\">\n            <ng-container *ngIf=\"!isLoading && (hasError || noData)\">\n                <div class=\"text-danger\">\n                    <i class=\"bi bi-exclamation-triangle-fill\"></i>\n                    <img src=\"assets/images/login/interneticon.png\" alt=\"Warning\" class=\"warning-icon mr-2\" />\n                    <span *ngIf=\"hasError\" class=\"ms-2\">An unexpected issue occurred</span>\n                    <span *ngIf=\"noData\" class=\"ms-2\">The input provided does not have enough clinical details for an AI-assistant assessment.</span>\n                </div>\n                <button *ngIf=\"!noData\" type=\"button\" class=\"try-again-btn mt-3\" (click)=\"onTryAgain()\">\n                    {{'Try again'|translate}}\n                </button>\n            </ng-container>\n\n            <button *ngIf=\"isLoading\" class=\"stats-loading\">\n                <div class=\"eins\"></div>\n                <div class=\"zwei\"></div>\n                <div class=\"drei\"></div>\n            </button>\n\n            <div *ngIf=\"isLoading\" class=\"mt-3\">\n                <i class=\"bi bi-exclamation-triangle-fill\"></i>\n                <span class=\"ms-2 loading-text\">Please wait while the results are being generated.</span>\n            </div>\n\n        </div>\n    </div>\n</ng-container>\n\n<ng-container *ngIf=\"diagnosisList.length\" class=\"mt-2\">\n    <p class=\"note-con ml-2\">\n        <span class=\"note-label\">Note:</span>\n        This information is AI generated. Please rely on your medical judgement while referring to it.\n    </p>\n    <div class=\"intel-accordion-title\">\n        <h6 class=\"mt-1 ml-2 diffrential-diagnosis\">Differential Diagnosis</h6>\n    </div>\n    <div class=\"intel-accordion-title\">\n        <p class=\"text-muted mb-3 diagnosis-list ml-2\">\n            Select the diagnosis based on your medical judgement.\n        </p>\n    </div>\n\n    <div class=\"diagnosis-container p-3\">\n        <div *ngFor=\"let diagnosis of diagnosisList\" \n             class=\"d-flex align-items-center mb-2\"\n             [class.disabled-diagnosis]=\"isDiagnosisExists(diagnosis.diagnosis)\">\n            <input type=\"checkbox\" class=\"custom-checkbox me-2\"\n                [checked]=\"isDiagnosisSelected(diagnosis.diagnosis)\"\n                [disabled]=\"isDiagnosisExists(diagnosis.diagnosis)\"\n                (change)=\"onAIDiagnosisChange(diagnosis.diagnosis)\">\n            <label class=\"fw-bold\" [class.text-muted]=\"isDiagnosisExists(diagnosis.diagnosis)\">\n                {{ diagnosis.diagnosis }}\n                <span class=\"text-muted ms-2\">(likely {{ diagnosis.likelihood }})</span>\n            </label>\n        </div>\n    </div>\n\n    <div class=\"rationale-container\">\n        <h5 class=\"fw-bold rationale\">Rationale</h5>\n        <div *ngFor=\"let rationale of diagnosisList; let i = index\" class=\"rationale-item p-3 mb-2\">\n            <h3 class=\"fw-bold\">\n                {{ i + 1 }}. {{ rationale.diagnosis }}\n                <span class=\"text-muted small\">(likely {{ rationale.likelihood }})</span>\n            </h3>\n            <p class=\"rationale-description\" [innerHTML]=\"rationale.rationale\"></p>\n        </div>\n    </div>\n\n</ng-container>\n\n<div *ngIf=\"conclusion\" class=\"conclusion-card\">\n    <div class=\"conclusion-header\">\n        <h2>Conclusion</h2>\n    </div>\n    <div class=\"conclusion-body\">\n        <p>{{ conclusion }}</p>\n    </div>\n</div>\n\n<!-- <div>\n    <h6 class=\"fw-bold\">Further questions</h6>\n    <div *ngFor=\"let question of questions; let i = index\" class=\"rationale-item p-3 mb-3\">\n        <h6 class=\"fw-bold\">{{ i + 1 }}. {{ question.title }}</h6>\n        <ul>\n            <li *ngFor=\"let item of question.items\">{{ item }}</li>\n        </ul>\n    </div>\n</div> -->", styles: ["@charset \"UTF-8\";.try-again-btn{padding:6px 24px;background:var(--color-lightGray);border-radius:8px;border:none;outline:none;font-family:DM Sans;font-weight:700;font-size:14px;line-height:150%;color:var(--color-darkBlue)}.diffrential-diagnosis{font-weight:700;font-size:16px;line-height:24px;letter-spacing:0%}.diagnosis-list{font-weight:400;font-size:14px;line-height:21px;letter-spacing:0%}.diagnosis-container{background-color:#faf7fc;border-radius:10px;padding:15px}.custom-checkbox{appearance:none;width:18px;height:18px;border:1px solid #B0ADBE;border-radius:4px;position:relative;cursor:pointer;background-color:transparent;margin-right:10px;margin-bottom:9px}.custom-checkbox:checked{background-color:#0fd197}.custom-checkbox:checked:after{content:\"\\2713\";font-size:14px;font-weight:700;color:#fff;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}.rationale-container{background-color:#faf7fc;border-radius:10px;padding:15px}.rationale-item{border-bottom:1.5px solid rgba(178,175,190,.2)}.rationale{font-weight:700;font-size:16px;line-height:24px;letter-spacing:0%}.rationale-description{font-weight:400;font-size:16px;line-height:24px;letter-spacing:0%;margin-left:13px}.stats-loading{padding:6px 24px;background:var(--color-lightGray);border-radius:8px;border:none;outline:none;font-family:DM Sans;font-weight:700;font-size:14px;line-height:150%;color:var(--color-darkBlue)}.stats-loading div{background:#0060ff;display:inline-block;height:8px;width:8px;border-radius:100%;animation:bouncedelay 1.4s infinite ease-in-out;animation-fill-mode:both}.stats-loading div.eins{animation-delay:-.32s}.stats-loading div.zwei{animation-delay:-.16s}@keyframes bouncedelay{0%,80%,to{transform:scale(0);opacity:0}40%{transform:scale(1);opacity:100}}.loading-text{font-weight:400;font-size:12px;line-height:18px;color:#7f7b92}.conclusion-card{background:#fff;border-radius:10px;margin:20px 0;box-shadow:0 1px 3px #1018281a,0 1px 2px #1018280f}.conclusion-card .conclusion-header{padding:16px 24px;border-bottom:1px solid #EAECF0}.conclusion-card .conclusion-header h2{font-size:16px;font-weight:700;line-height:24px;margin:0;color:#101828}.conclusion-card .conclusion-body{padding:24px}.conclusion-card .conclusion-body p{margin:0;font-size:14px;line-height:20px;color:#344054;font-weight:400}.note-con{background:#f8f9fa;border-radius:4px;padding:12px 16px;margin:16px 0;font-size:14px;line-height:20px;color:#212529}.note-con .note-label{font-weight:600;margin-right:4px;color:#dc3545}.disabled-diagnosis{opacity:.7;cursor:not-allowed}.disabled-diagnosis .custom-checkbox{cursor:not-allowed}.disabled-diagnosis .text-muted{opacity:.7}.warning-icon{height:50px;width:50px}.erorr-container{height:150px;background-color:#faf7fc;border-radius:10px;width:100%}\n"], dependencies: [{ kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]" }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]" }, { kind: "pipe", type: i3.TranslatePipe, name: "translate" }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: AillmddxComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-aillmddx', template: "<ng-container *ngIf=\"!diagnosisList.length\">\n    <div class=\"d-flex justify-content-center mt-2\">\n        <div class=\"erorr-container alert text-center p-4 d-flex flex-column align-items-center\">\n            <ng-container *ngIf=\"!isLoading && (hasError || noData)\">\n                <div class=\"text-danger\">\n                    <i class=\"bi bi-exclamation-triangle-fill\"></i>\n                    <img src=\"assets/images/login/interneticon.png\" alt=\"Warning\" class=\"warning-icon mr-2\" />\n                    <span *ngIf=\"hasError\" class=\"ms-2\">An unexpected issue occurred</span>\n                    <span *ngIf=\"noData\" class=\"ms-2\">The input provided does not have enough clinical details for an AI-assistant assessment.</span>\n                </div>\n                <button *ngIf=\"!noData\" type=\"button\" class=\"try-again-btn mt-3\" (click)=\"onTryAgain()\">\n                    {{'Try again'|translate}}\n                </button>\n            </ng-container>\n\n            <button *ngIf=\"isLoading\" class=\"stats-loading\">\n                <div class=\"eins\"></div>\n                <div class=\"zwei\"></div>\n                <div class=\"drei\"></div>\n            </button>\n\n            <div *ngIf=\"isLoading\" class=\"mt-3\">\n                <i class=\"bi bi-exclamation-triangle-fill\"></i>\n                <span class=\"ms-2 loading-text\">Please wait while the results are being generated.</span>\n            </div>\n\n        </div>\n    </div>\n</ng-container>\n\n<ng-container *ngIf=\"diagnosisList.length\" class=\"mt-2\">\n    <p class=\"note-con ml-2\">\n        <span class=\"note-label\">Note:</span>\n        This information is AI generated. Please rely on your medical judgement while referring to it.\n    </p>\n    <div class=\"intel-accordion-title\">\n        <h6 class=\"mt-1 ml-2 diffrential-diagnosis\">Differential Diagnosis</h6>\n    </div>\n    <div class=\"intel-accordion-title\">\n        <p class=\"text-muted mb-3 diagnosis-list ml-2\">\n            Select the diagnosis based on your medical judgement.\n        </p>\n    </div>\n\n    <div class=\"diagnosis-container p-3\">\n        <div *ngFor=\"let diagnosis of diagnosisList\" \n             class=\"d-flex align-items-center mb-2\"\n             [class.disabled-diagnosis]=\"isDiagnosisExists(diagnosis.diagnosis)\">\n            <input type=\"checkbox\" class=\"custom-checkbox me-2\"\n                [checked]=\"isDiagnosisSelected(diagnosis.diagnosis)\"\n                [disabled]=\"isDiagnosisExists(diagnosis.diagnosis)\"\n                (change)=\"onAIDiagnosisChange(diagnosis.diagnosis)\">\n            <label class=\"fw-bold\" [class.text-muted]=\"isDiagnosisExists(diagnosis.diagnosis)\">\n                {{ diagnosis.diagnosis }}\n                <span class=\"text-muted ms-2\">(likely {{ diagnosis.likelihood }})</span>\n            </label>\n        </div>\n    </div>\n\n    <div class=\"rationale-container\">\n        <h5 class=\"fw-bold rationale\">Rationale</h5>\n        <div *ngFor=\"let rationale of diagnosisList; let i = index\" class=\"rationale-item p-3 mb-2\">\n            <h3 class=\"fw-bold\">\n                {{ i + 1 }}. {{ rationale.diagnosis }}\n                <span class=\"text-muted small\">(likely {{ rationale.likelihood }})</span>\n            </h3>\n            <p class=\"rationale-description\" [innerHTML]=\"rationale.rationale\"></p>\n        </div>\n    </div>\n\n</ng-container>\n\n<div *ngIf=\"conclusion\" class=\"conclusion-card\">\n    <div class=\"conclusion-header\">\n        <h2>Conclusion</h2>\n    </div>\n    <div class=\"conclusion-body\">\n        <p>{{ conclusion }}</p>\n    </div>\n</div>\n\n<!-- <div>\n    <h6 class=\"fw-bold\">Further questions</h6>\n    <div *ngFor=\"let question of questions; let i = index\" class=\"rationale-item p-3 mb-3\">\n        <h6 class=\"fw-bold\">{{ i + 1 }}. {{ question.title }}</h6>\n        <ul>\n            <li *ngFor=\"let item of question.items\">{{ item }}</li>\n        </ul>\n    </div>\n</div> -->", styles: ["@charset \"UTF-8\";.try-again-btn{padding:6px 24px;background:var(--color-lightGray);border-radius:8px;border:none;outline:none;font-family:DM Sans;font-weight:700;font-size:14px;line-height:150%;color:var(--color-darkBlue)}.diffrential-diagnosis{font-weight:700;font-size:16px;line-height:24px;letter-spacing:0%}.diagnosis-list{font-weight:400;font-size:14px;line-height:21px;letter-spacing:0%}.diagnosis-container{background-color:#faf7fc;border-radius:10px;padding:15px}.custom-checkbox{appearance:none;width:18px;height:18px;border:1px solid #B0ADBE;border-radius:4px;position:relative;cursor:pointer;background-color:transparent;margin-right:10px;margin-bottom:9px}.custom-checkbox:checked{background-color:#0fd197}.custom-checkbox:checked:after{content:\"\\2713\";font-size:14px;font-weight:700;color:#fff;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}.rationale-container{background-color:#faf7fc;border-radius:10px;padding:15px}.rationale-item{border-bottom:1.5px solid rgba(178,175,190,.2)}.rationale{font-weight:700;font-size:16px;line-height:24px;letter-spacing:0%}.rationale-description{font-weight:400;font-size:16px;line-height:24px;letter-spacing:0%;margin-left:13px}.stats-loading{padding:6px 24px;background:var(--color-lightGray);border-radius:8px;border:none;outline:none;font-family:DM Sans;font-weight:700;font-size:14px;line-height:150%;color:var(--color-darkBlue)}.stats-loading div{background:#0060ff;display:inline-block;height:8px;width:8px;border-radius:100%;animation:bouncedelay 1.4s infinite ease-in-out;animation-fill-mode:both}.stats-loading div.eins{animation-delay:-.32s}.stats-loading div.zwei{animation-delay:-.16s}@keyframes bouncedelay{0%,80%,to{transform:scale(0);opacity:0}40%{transform:scale(1);opacity:100}}.loading-text{font-weight:400;font-size:12px;line-height:18px;color:#7f7b92}.conclusion-card{background:#fff;border-radius:10px;margin:20px 0;box-shadow:0 1px 3px #1018281a,0 1px 2px #1018280f}.conclusion-card .conclusion-header{padding:16px 24px;border-bottom:1px solid #EAECF0}.conclusion-card .conclusion-header h2{font-size:16px;font-weight:700;line-height:24px;margin:0;color:#101828}.conclusion-card .conclusion-body{padding:24px}.conclusion-card .conclusion-body p{margin:0;font-size:14px;line-height:20px;color:#344054;font-weight:400}.note-con{background:#f8f9fa;border-radius:4px;padding:12px 16px;margin:16px 0;font-size:14px;line-height:20px;color:#212529}.note-con .note-label{font-weight:600;margin-right:4px;color:#dc3545}.disabled-diagnosis{opacity:.7;cursor:not-allowed}.disabled-diagnosis .custom-checkbox{cursor:not-allowed}.disabled-diagnosis .text-muted{opacity:.7}.warning-icon{height:50px;width:50px}.erorr-container{height:150px;background-color:#faf7fc;border-radius:10px;width:100%}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.AiddxService }]; }, propDecorators: { patientInfo: [{
                type: Input
            }], visit: [{
                type: Input
            }], existingDiagnosis: [{
                type: Input
            }], diagnosisSelected: [{
                type: Output
            }], notes: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,